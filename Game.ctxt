#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Create\ the\ game\ and\ initialize\ its\ internal\ map.\r\n
comment1.params=
comment1.target=void\ play()
comment1.text=\r\n\ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\r\n
comment10.params=
comment10.target=void\ score()
comment10.text=\r\n\ Prints\ out\ the\ current\ score.\r\n
comment11.params=
comment11.target=void\ time()
comment11.text=\r\n\ Prints\ out\ the\ current\ number\ of\ turns\ that\ a\ player\ has\ used\ so\ far.\r\n
comment12.params=
comment12.target=void\ status()
comment12.text=\r\n\ Prints\ out\ the\ current\ state\ of\ the\ game\ including\ the\ \r\n\ complete\ description\ of\ the\ current\ room,\ the\ player's\ \r\n\ score,\ and\ the\ number\ of\ turns\ a\ player\ has\ used\ so\ far,\r\n\ and\ the\ current\ form\ of\ the\ player.\r\n
comment13.params=
comment13.target=void\ currentForm()
comment13.text=\r\n\ Prints\ out\ the\ current\ form\ of\ the\ player\r\n\ Creature\ type\:\ Lioness,\ Lemur,\ Shark,\ Pelican,\ Human,\ Dog\r\n
comment14.params=command
comment14.target=void\ examine(Command)
comment14.text=\r\n\ Prints\ out\ a\ complete\ description\ of\ the\ named\ item.\ \r\n\ When\ a\ complex\ item\ is\ examined,\ the\ items\ that\ are\ \r\n\ contained\ inside\ are\ listed.\r\n\ \r\n\ @param\ command\ -\ the\ command\ input\ from\ the\ player\r\n
comment15.params=command
comment15.target=void\ unpack(Command)
comment15.text=\r\n\ Remove\ all\ of\ the\ items\ inside\ a\ complex\ item\ and\ place\ them\r\n\ in\ the\ current\ room.\r\n\ \r\n\ @param\ command\ -\ the\ command\ of\ the\ user\r\n
comment16.params=command
comment16.target=void\ pack(Command)
comment16.text=\r\n\ Moves\ the\ specified\ item\ into\ the\ specified\ complex\ item\r\n\ \r\n\ @param\ command\ -\ the\ command\ of\ the\ user\r\n
comment17.params=command
comment17.target=void\ take(Command)
comment17.text=\r\n\ Takes\ an\ item\ and\ places\ it\ into\ the\ player's\ inventory\r\n\ \r\n\ @param\ command\ -\ the\ command\ the\ user\ inputs\r\n
comment18.params=command
comment18.target=void\ drop(Command)
comment18.text=\r\n\ Takes\ an\ item\ from\ the\ player's\ inventory\ and\ drops\r\n\ it\ into\ the\ current\ room\r\n\ \r\n\ @param\ command\ -\ the\ command\ the\ user\ inputs\r\n
comment19.params=
comment19.target=void\ inventory()
comment19.text=\r\n\ Prints\ out\ the\ player's\ inventory\r\n
comment2.params=
comment2.target=void\ printWelcome()
comment2.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment20.params=command
comment20.target=void\ unlockDoor(Command)
comment20.text=\r\n\ Unlocks\ a\ locked\ door\r\n\ \r\n\ @param\ command\ -\ the\ command\ the\ user\ inputs\r\n
comment21.params=command
comment21.target=void\ say(Command)
comment21.text=\r\n\ Begins\ conversation\ between\ player\ and\ NPC\r\n\ \r\n\ @param\ command\ -\ the\ command\ of\ the\ user\r\n
comment22.params=key\ theCharacter
comment22.target=void\ teleportPlayer(java.lang.String,\ Character)
comment22.text=\r\n\ A\ method\ that\ uses\ the\ end\ key\ of\ the\ Spirit\ King\r\n\ conversation\ to\ judge\ whether\ or\ not\r\n\ to\ teleport\ the\ player\ to\ the\ \r\n\ Clearing\ (Savanna),\ Buoy\ (Sea),\ Apartment\ (City)\r\n\ \r\n\ If\ teleport\ occurs\ then\ it\ resets\ the\ player's\ health\ and\r\n\ starts\ time\ over\ (turn\ count\ starts\ over).\r\n\ \r\n\ @param\ key\ -\ the\ key\ from\ the\ conversation\r\n\ @param\ theCharacter\ -\ the\ character\ to\ talk\ to\r\n
comment23.params=command
comment23.target=void\ give(Command)
comment23.text=\r\n\ Method\ that\ gives\ an\ item\ from\ the\r\n\ Player's\ inventory\ to\ a\ NPC's\ inventory\r\n\ \r\n\ @param\ command\ -\ the\ command\ of\ the\ user\r\n
comment24.params=characterToObserve
comment24.target=void\ observe(Character)
comment24.text=\r\n\ Looks\ at\ NPC's\ inventory\r\n\ \r\n\ @param\ characterToObserve\ -\ the\ NPC\ to\ observe\r\n
comment25.params=command
comment25.target=void\ morph(Command)
comment25.text=\r\n\ Changes\ player\ type\ to\ a\ different\ player\ type\r\n\ \r\n\ @param\ command\ -\ the\ command\ the\ user\ inputs\r\n
comment26.params=
comment26.target=void\ playerCharacterType()
comment26.text=\r\n\ Prompts\ the\ user\ what\ character\ they\ wish\ to\ be\r\n
comment27.params=playerType
comment27.target=void\ playerMorph(java.lang.String)
comment27.text=\r\n\ Changes\ general\ type\ of\ player\ to\ a\ specific\ type\ of\ player\r\n\ \r\n\ @param\ playerType\ -\ the\ type\ of\ player\ to\ morph\ to\r\n
comment28.params=
comment28.target=void\ missionAccomplished()
comment28.text=\r\n\ Sees\ if\ final\ mission\ goals\ are\ complete\r\n
comment29.params=
comment29.target=java.lang.String\ success()
comment29.text=\r\n\ \ This\ method\ determines\ what\ creature\ the\ player\ would\ be\ on\ earth.\ \r\n\ \ \r\n\ \ @return\ successCreature\ -\ the\ creature\ String\ the\ player\ will\ end\ up\ as\r\n
comment3.params=command
comment3.target=boolean\ processCommand(Command)
comment3.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ command\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment30.params=command
comment30.target=void\ scare(Command)
comment30.text=\r\n\ This\ method\ removes\ desired\ NPC's\ away.\ \r\n\ \r\n\ @param\ command\ -\ the\ command\ entered\ by\ the\ user\r\n
comment31.params=command
comment31.target=void\ climb(Command)
comment31.text=\r\n\ Try\ to\ climb\ to\ one\ direction\r\n\ \r\n\ @param\ command\ The\ command\ entered\ by\ player.\r\n
comment32.params=command
comment32.target=void\ fly(Command)
comment32.text=\r\n\ Try\ to\ fly\ to\ one\ direction\ -\ "up"\r\n\ \r\n\ @param\ command\ The\ command\ entered\ by\ player.\r\n
comment33.params=command
comment33.target=void\ swim(Command)
comment33.text=\r\n\ Try\ to\ swim\ to\ one\ direction\ -\ "down"\r\n\ \r\n\ @param\ command\ The\ command\ entered\ by\ player.\r\n
comment34.params=command
comment34.target=void\ bite(Command)
comment34.text=\r\n\ The\ method\ to\ battle\ a\ Monster\ NPC\r\n\ \r\n\ @param\ command\ -\ the\ command\ entered\ by\ the\ user\r\n
comment35.params=command
comment35.target=void\ peck(Command)
comment35.text=\r\n\ Pelican\ action\ to\ interact\ with\ button\ or\ lever\r\n\ \r\n\ @param\ command\ -\ the\ command\ input\ from\ the\ player\r\n
comment36.params=
comment36.target=void\ depleteHealth()
comment36.text=\r\n\ Takes\ away\ from\ player's\ health\r\n
comment37.params=command
comment37.target=void\ observe(Command)
comment37.text=\r\n\ Examine\ a\ NPC's\ inventory\r\n\r\n\ @param\ command\ The\ command\ entered\ by\ the\ player\r\n
comment38.params=command
comment38.target=void\ steal(Command)
comment38.text=\r\n\ Takes\ an\ item\ from\ the\ NPC's\ inventory\ and\ \r\n\ gives\ it\ to\ the\ player\r\n\r\n\ @param\ command\ -\ the\ command\ the\ user\ inputs\r\n
comment39.params=command
comment39.target=void\ attack(Command)
comment39.text=\r\n\ The\ method\ to\ battle\ a\ Monster\ NPC\r\n\ \r\n\ @param\ command\ -\ the\ command\ entered\ by\ the\ user\r\n
comment4.params=
comment4.target=void\ printHelp()
comment4.text=\r\n\ Print\ out\ some\ help\ information.\ Here\ we\ print\ some\ stupid,\ cryptic\r\n\ message\ and\ a\ list\ of\ the\ command\ words.\r\n
comment5.params=command
comment5.target=void\ goRoom(Command)
comment5.text=\r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\ room,\r\n\ otherwise\ print\ an\ error\ message.\r\n\ \r\n\ @param\ command\ The\ go\ command.\r\n
comment6.params=command
comment6.target=boolean\ quit(Command)
comment6.text=\r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\ whether\ we\r\n\ really\ quit\ the\ game.\r\n\ \r\n\ @param\ command\ The\ quit\ command.\ \ \ \ \ *\ \r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment7.params=
comment7.target=void\ printLocationInformation()
comment7.text=\r\n\ Print\ out\ information\ of\ where\ the\ player\ is\ \r\n\ at\ the\ current\ time\r\n
comment8.params=
comment8.target=void\ look()
comment8.text=\r\n\ Print\ out\ the\ description\ of\ the\ room\ and\ exits.\r\n
comment9.params=
comment9.target=void\ back()
comment9.text=\r\n\ Takes\ the\ player\ into\ the\ previous\ room\ he/she\ was\ in.\ \r\n
numComments=40
